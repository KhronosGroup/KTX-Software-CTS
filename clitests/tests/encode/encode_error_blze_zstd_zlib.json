{
    "description": "Test that BasisLZ cannot be supercompressed with Zstd or ZLIB.",
    "command": "ktx encode --testrun --codec basis-lz --${supercompression} 1 input/ktx2/valid_${subcase}.ktx2 output/encode/encode_error_blze_zstd_zlib/output_${subcase}.ktx2",
    "status": 1,
    "stderr": "golden/encode/encode_error_blze_zstd_zlib/${supercompression}.err.txt",
    "args": {
        "supercompression": [
            "zstd",
            "zlib"
        ],
        "subcase": [
            "R8_UNORM_2D",
            "R8_UNORM_2D_MIP",
            "R8_UNORM_2D_ARRAY",
            "R8_UNORM_2D_ARRAY_MIP",
            "R8_UNORM_CUBE",
            "R8_UNORM_CUBE_MIP",
            "R8_UNORM_CUBE_ARRAY",
            "R8_UNORM_CUBE_ARRAY_MIP",
            "R8_UNORM_2D_ZSTD_1",
            "R8_UNORM_2D_ZSTD_9",
            "R8_UNORM_2D_ZLIB_1",
            "R8_UNORM_2D_ZLIB_9",
            "R8G8_UNORM_2D",
            "R8G8_UNORM_2D_MIP",
            "R8G8_UNORM_2D_ARRAY",
            "R8G8_UNORM_2D_ARRAY_MIP",
            "R8G8_UNORM_CUBE",
            "R8G8_UNORM_CUBE_MIP",
            "R8G8_UNORM_CUBE_ARRAY",
            "R8G8_UNORM_CUBE_ARRAY_MIP",
            "R8G8_UNORM_2D_ZSTD_1",
            "R8G8_UNORM_2D_ZSTD_9",
            "R8G8_UNORM_2D_ZLIB_1",
            "R8G8_UNORM_2D_ZLIB_9",
            "R8G8B8_UNORM_2D",
            "R8G8B8_UNORM_2D_MIP",
            "R8G8B8_UNORM_2D_ARRAY",
            "R8G8B8_UNORM_2D_ARRAY_MIP",
            "R8G8B8_UNORM_CUBE",
            "R8G8B8_UNORM_CUBE_MIP",
            "R8G8B8_UNORM_CUBE_ARRAY",
            "R8G8B8_UNORM_CUBE_ARRAY_MIP",
            "R8G8B8_UNORM_2D_ZSTD_1",
            "R8G8B8_UNORM_2D_ZSTD_9",
            "R8G8B8_UNORM_2D_ZLIB_1",
            "R8G8B8_UNORM_2D_ZLIB_9",
            "R8G8B8A8_UNORM_2D",
            "R8G8B8A8_UNORM_2D_MIP",
            "R8G8B8A8_UNORM_2D_ARRAY",
            "R8G8B8A8_UNORM_2D_ARRAY_MIP",
            "R8G8B8A8_UNORM_CUBE",
            "R8G8B8A8_UNORM_CUBE_MIP",
            "R8G8B8A8_UNORM_CUBE_ARRAY",
            "R8G8B8A8_UNORM_CUBE_ARRAY_MIP",
            "R8G8B8A8_UNORM_2D_ZSTD_1",
            "R8G8B8A8_UNORM_2D_ZSTD_9",
            "R8G8B8A8_UNORM_2D_ZLIB_1",
            "R8G8B8A8_UNORM_2D_ZLIB_9",
            "R8_SRGB_2D",
            "R8_SRGB_2D_MIP",
            "R8_SRGB_2D_ARRAY",
            "R8_SRGB_2D_ARRAY_MIP",
            "R8_SRGB_CUBE",
            "R8_SRGB_CUBE_MIP",
            "R8_SRGB_CUBE_ARRAY",
            "R8_SRGB_CUBE_ARRAY_MIP",
            "R8G8_SRGB_2D",
            "R8G8_SRGB_2D_MIP",
            "R8G8_SRGB_2D_ARRAY",
            "R8G8_SRGB_2D_ARRAY_MIP",
            "R8G8_SRGB_CUBE",
            "R8G8_SRGB_CUBE_MIP",
            "R8G8_SRGB_CUBE_ARRAY",
            "R8G8_SRGB_CUBE_ARRAY_MIP",
            "R8G8B8_SRGB_2D",
            "R8G8B8_SRGB_2D_MIP",
            "R8G8B8_SRGB_2D_ARRAY",
            "R8G8B8_SRGB_2D_ARRAY_MIP",
            "R8G8B8_SRGB_CUBE",
            "R8G8B8_SRGB_CUBE_MIP",
            "R8G8B8_SRGB_CUBE_ARRAY",
            "R8G8B8_SRGB_CUBE_ARRAY_MIP",
            "R8G8B8A8_SRGB_2D",
            "R8G8B8A8_SRGB_2D_MIP",
            "R8G8B8A8_SRGB_2D_ARRAY",
            "R8G8B8A8_SRGB_2D_ARRAY_MIP",
            "R8G8B8A8_SRGB_CUBE",
            "R8G8B8A8_SRGB_CUBE_MIP",
            "R8G8B8A8_SRGB_CUBE_ARRAY",
            "R8G8B8A8_SRGB_CUBE_ARRAY_MIP"
        ]
    }
}
