{
    "description": "The typeSize must match the expected typeSize of the VkFormat.",
    "command": "ktx validate --testrun ${format[args]} input/validate/3012/error_TypeSizeMismatch_${subcase}.ktx2",
    "status": 3,
    "stdout": "golden/validate/3012/error_TypeSizeMismatch_${subcase}.out.${format[ext]}",
    "args": {
        "format": [
            {
                "args": "",
                "ext": "txt"
            },
            {
                "args": "--format text",
                "ext": "txt"
            },
            {
                "args": "--format json",
                "ext": "json"
            },
            {
                "args": "--format mini-json",
                "ext": "mini.json"
            }
        ],
        "subcase": [
            "R8_UNORM",
            "R8_SRGB",
            "R8G8_UNORM",
            "R8G8_SRGB",
            "R8G8B8_UNORM",
            "R8G8B8_SRGB",
            "B8G8R8_UNORM",
            "B8G8R8_SRGB",
            "A8B8G8R8_UNORM_PACK32",
            "A8B8G8R8_SNORM_PACK32",
            "A8B8G8R8_SRGB_PACK32",
            "R8G8B8A8_UNORM",
            "R8G8B8A8_SRGB",
            "B8G8R8A8_UNORM",
            "B8G8R8A8_SRGB",
            "A8_UNORM_KHR",
            "R4G4_UNORM_PACK8",
            "R5G6B5_UNORM_PACK16",
            "B5G6R5_UNORM_PACK16",
            "R4G4B4A4_UNORM_PACK16",
            "B4G4R4A4_UNORM_PACK16",
            "R5G5B5A1_UNORM_PACK16",
            "B5G5R5A1_UNORM_PACK16",
            "A1R5G5B5_UNORM_PACK16",
            "A1B5G5R5_UNORM_PACK16_KHR",
            "A4R4G4B4_UNORM_PACK16",
            "A4B4G4R4_UNORM_PACK16",
            "R16_UNORM",
            "R16G16_UNORM",
            "R16G16B16_UNORM",
            "R16G16B16A16_UNORM",
            "A2R10G10B10_UNORM_PACK32",
            "A2B10G10R10_UNORM_PACK32",
            "R8_UINT",
            "R8_SINT",
            "R16_UINT",
            "R16_SINT",
            "R32_UINT",
            "R8G8_UINT",
            "R8G8_SINT",
            "R16G16_UINT",
            "R16G16_SINT",
            "R32G32_UINT",
            "R8G8B8_UINT",
            "R8G8B8_SINT",
            "B8G8R8_UINT",
            "B8G8R8_SINT",
            "R16G16B16_UINT",
            "R16G16B16_SINT",
            "R32G32B32_UINT",
            "A8B8G8R8_UINT_PACK32",
            "A8B8G8R8_SINT_PACK32",
            "R8G8B8A8_UINT",
            "R8G8B8A8_SINT",
            "B8G8R8A8_UINT",
            "B8G8R8A8_SINT",
            "R16G16B16A16_UINT",
            "R16G16B16A16_SINT",
            "R32G32B32A32_UINT",
            "A2R10G10B10_UINT_PACK32",
            "A2R10G10B10_SINT_PACK32",
            "A2B10G10R10_SINT_PACK32",
            "A2B10G10R10_UINT_PACK32",
            "R16_SFLOAT",
            "R16G16_SFLOAT",
            "R16G16B16_SFLOAT",
            "R16G16B16A16_SFLOAT",
            "R32_SFLOAT",
            "R32G32_SFLOAT",
            "R32G32B32_SFLOAT",
            "R32G32B32A32_SFLOAT",
            "B10G11R11_UFLOAT_PACK32",
            "E5B9G9R9_UFLOAT_PACK32",
            "D16_UNORM",
            "X8_D24_UNORM_PACK32",
            "D32_SFLOAT",
            "S8_UINT",
            "D16_UNORM_S8_UINT",
            "D24_UNORM_S8_UINT",
            "D32_SFLOAT_S8_UINT",
            "R10X6_UNORM_PACK16",
            "R10X6G10X6_UNORM_2PACK16",
            "R10X6G10X6B10X6A10X6_UNORM_4PACK16",
            "R12X4_UNORM_PACK16",
            "R12X4G12X4_UNORM_2PACK16",
            "R12X4G12X4B12X4A12X4_UNORM_4PACK16",
            "G8B8G8R8_422_UNORM",
            "B8G8R8G8_422_UNORM",
            "G10X6B10X6G10X6R10X6_422_UNORM_4PACK16",
            "B10X6G10X6R10X6G10X6_422_UNORM_4PACK16",
            "G12X4B12X4G12X4R12X4_422_UNORM_4PACK16",
            "B12X4G12X4R12X4G12X4_422_UNORM_4PACK16",
            "G16B16G16R16_422_UNORM",
            "B16G16R16G16_422_UNORM",
            "R16G16_S10_NV"
        ]
    }
}
