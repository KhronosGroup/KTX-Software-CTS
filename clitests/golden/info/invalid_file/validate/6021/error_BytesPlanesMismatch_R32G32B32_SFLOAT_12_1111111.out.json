{
    "$schema": "https://schema.khronos.org/ktx/info_v0.json",
    "valid": false,
    "messages": [
        {
            "id": 6021,
            "type": "error",
            "message": "Invalid bytesPlanes in basic DFD block. The values do not match the expected values.",
            "details": "DFD block #1 bytesPlanes in basic DFD block are 12 1 1 1 1 1 1 1 but for VK_FORMAT_R32G32B32_SFLOAT textures these must be 12 0 0 0 0 0 0 0."
        },
        {
            "id": 6024,
            "type": "error",
            "message": "Invalid bytesPlanes in basic DFD block. Multiplane formats are not supported.",
            "details": "DFD block #1 bytesPlanes in basic DFD block are 12 1 1 1 1 1 1 1 but bytesPlane[1-7] must be 0 as multiplane formats are not supported."
        }
    ],
    "header": {
        "identifier": "«KTX 20»\r\n\u001A\n",
        "vkFormat": "VK_FORMAT_R32G32B32_SFLOAT",
        "typeSize": 4,
        "pixelWidth": 16,
        "pixelHeight": 16,
        "pixelDepth": 0,
        "layerCount": 0,
        "faceCount": 1,
        "levelCount": 1,
        "supercompressionScheme": "KTX_SS_NONE"
    },
    "index": {
        "dataFormatDescriptor": {
            "byteOffset": 104,
            "byteLength": 76
        },
        "keyValueData": {
            "byteOffset": 180,
            "byteLength": 44
        },
        "supercompressionGlobalData": {
            "byteOffset": 0,
            "byteLength": 0
        },
        "levels": [
            {
                "byteOffset": 228,
                "byteLength": 3072,
                "uncompressedByteLength": 3072
            }
        ]
    },
    "dataFormatDescriptor": {
        "totalSize": 76,
        "blocks": [
            {
                "vendorId": "KHR_DF_VENDORID_KHRONOS",
                "descriptorType": "KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT",
                "versionNumber": "KHR_DF_VERSIONNUMBER_1_3",
                "descriptorBlockSize": 72,
                "flags": [
                    "KHR_DF_FLAG_ALPHA_STRAIGHT"
                ],
                "transferFunction": "KHR_DF_TRANSFER_LINEAR",
                "colorPrimaries": "KHR_DF_PRIMARIES_BT709",
                "colorModel": "KHR_DF_MODEL_RGBSDA",
                "texelBlockDimension": [1, 1, 1, 1],
                "bytesPlane": [12, 1, 1, 1, 1, 1, 1, 1],
                "samples": [
                    {
                        "qualifiers": [
                            "KHR_DF_SAMPLE_DATATYPE_SIGNED",
                            "KHR_DF_SAMPLE_DATATYPE_FLOAT"
                        ],
                        "channelType": "KHR_DF_CHANNEL_RGBSDA_RED",
                        "bitLength": 31,
                        "bitOffset": 0,
                        "samplePosition": [0, 0, 0, 0],
                        "sampleLower": -1082130432,
                        "sampleUpper": 1065353216
                    },
                    {
                        "qualifiers": [
                            "KHR_DF_SAMPLE_DATATYPE_SIGNED",
                            "KHR_DF_SAMPLE_DATATYPE_FLOAT"
                        ],
                        "channelType": "KHR_DF_CHANNEL_RGBSDA_GREEN",
                        "bitLength": 31,
                        "bitOffset": 32,
                        "samplePosition": [0, 0, 0, 0],
                        "sampleLower": -1082130432,
                        "sampleUpper": 1065353216
                    },
                    {
                        "qualifiers": [
                            "KHR_DF_SAMPLE_DATATYPE_SIGNED",
                            "KHR_DF_SAMPLE_DATATYPE_FLOAT"
                        ],
                        "channelType": "KHR_DF_CHANNEL_RGBSDA_BLUE",
                        "bitLength": 31,
                        "bitOffset": 64,
                        "samplePosition": [0, 0, 0, 0],
                        "sampleLower": -1082130432,
                        "sampleUpper": 1065353216
                    }
                ]
            }
        ]
    },
    "keyValueData": {
        "KTXwriter": "Unidentified app / libktx "
    }
}
