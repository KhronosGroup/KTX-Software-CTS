ktx encode: Encode the KTX file specified as the input-file argument,
    optionally supercompress the result, and save it as the output-file.

Usage:
  ktx encode [OPTION...] <input-file> <output-file>

      --codec <target>  Target codec. With each encoding option the encoder specific options become 
                        valid, otherwise they are ignored. Case-insensitive.
                        Possible options are: basis-lz | uastc
      --compare-ssim    Calculate encoding structural similarity index measure (SSIM) and print it 
                        to stdout. Requires Basis-LZ or UASTC encoding.
      --compare-psnr    Calculate encoding peak signal-to-noise ratio (PSNR) and print it to 
                        stdout. Requires Basis-LZ or UASTC encoding.
      --zstd <level>    Supercompress the data with Zstandard. Cannot be used with ETC1S / BasisLZ 
                        format. Level range is [1,22]. Lower levels give faster but worse 
                        compression. Values above 20 should be used with caution as they require 
                        more memory.
      --zlib <level>    Supercompress the data with ZLIB. Cannot be used with ETC1S / BasisLZ 
                        format. Level range is [1,9]. Lower levels give faster but worse 
                        compression.
      --stdin           Use stdin as the input file. (Using a single dash '-' as the input file has 
                        the same effect)
      --stdout          Use stdout as the output file. (Using a single dash '-' as the output file 
                        has the same effect)
  -h, --help            Print this usage message and exit
  -v, --version         Print the version number of this program and exit
      --testrun         Indicates test run. If enabled the tool will produce deterministic output 
                        whenever possible

 Encode BasisLZ options:
      --clevel <level>          BasisLZ compression level, an encoding speed vs. quality level 
                                tradeoff. Range is [0,5], default is 1. Higher values are slower 
                                but give higher quality.
      --qlevel <level>          BasisLZ quality level. Range is [1,255]. Lower gives better 
                                compression/lower quality/faster. Higher gives less 
                                compression/higher quality/slower. --qlevel automatically 
                                determines values for --max-endpoints, --max-selectors, 
                                --endpoint-rdo-threshold and --selector-rdo-threshold for the 
                                target quality level. Setting these options overrides the values 
                                determined by --qlevel which defaults to 128 if neither it nor 
                                --max-endpoints and --max-selectors have been set.
      --max-endpoints <arg>     Manually set the maximum number of color endpoint clusters. Range 
                                is [1,16128]. Default is 0, unset.
      --endpoint-rdo-threshold <arg>
                                Set endpoint RDO quality threshold. The default is 1.25. Lower is 
                                higher quality but less quality per output bit (try [1.0,3.0]). 
                                This will override the value chosen by --qlevel.
      --max-selectors <arg>     Manually set the maximum number of color selector clusters from 
                                [1,16128]. Default is 0, unset.
      --selector-rdo-threshold <arg>
                                Set selector RDO quality threshold. The default is 1.25. Lower is 
                                higher quality but less quality per output bit (try [1.0,3.0]). 
                                This will override the value chosen by --qlevel.
      --no-endpoint-rdo         Disable endpoint rate distortion optimizations. Slightly faster, 
                                less noisy output, but lower quality per output bit. Default is to 
                                do endpoint RDO.
      --no-selector-rdo         Disable selector rate distortion optimizations. Slightly faster, 
                                less noisy output, but lower quality per output bit. Default is to 
                                do selector RDO.

 Encode UASTC options:
      --uastc-quality <level>   UASTC compression level, an encoding speed vs. quality level 
                                tradeoff. Range is [0,4], default is 1. Higher values are slower 
                                but give higher quality.
      --uastc-rdo               Enable UASTC RDO post-processing.
      --uastc-rdo-l <lambda>    Set UASTC RDO quality scalar to the specified value. Lower values 
                                yield higher quality/larger supercompressed files, higher values 
                                yield lower quality/smaller supercompressed files. A good range to 
                                try is [.25,10]. For normal maps a good range is [.25,.75]. The 
                                full range is [.001,10.0]. Default is 1.0.
      --uastc-rdo-d <dictsize>  Set UASTC RDO dictionary size in bytes. Default is 4096. Lower 
                                values=faster, but give less compression. Range is [64,65536].
      --uastc-rdo-b <scale>     Set UASTC RDO max smooth block error scale. Range is [1.0,300.0]. 
                                Default is 10.0, 1.0 is disabled. Larger values suppress more 
                                artifacts (and allocate more bits) on smooth blocks.
      --uastc-rdo-s <deviation>
                                Set UASTC RDO max smooth block standard deviation. Range is 
                                [.01,65536.0]. Default is 18.0. Larger values expand the range of 
                                blocks considered smooth.
      --uastc-rdo-f             Do not favor simpler UASTC modes in RDO mode.
      --uastc-rdo-m             Disable RDO multithreading (slightly higher compression, 
                                deterministic).

 Encode common options:
      --normal-mode      Optimizes for encoding textures with normal data. If the input texture has 
                         three or four linear components it is assumed to be a three component 
                         linear normal map storing unit length normals as (R=X, G=Y, B=Z). A fourth 
                         component will be ignored. The map will be converted to a two component 
                         X+Y normal map stored as (RGB=X, A=Y) prior to encoding. If unsure that 
                         your normals are unit length, use --normalize. If the input has 2 linear 
                         components it is assumed to be an X+Y map of unit normals.
                         The Z component can be recovered programmatically in shader code by using 
                         the equations:
                             nml.xy = texture(...).ga;              // Load in [0,1]
                             nml.xy = nml.xy * 2.0 - 1.0;           // Unpack to [-1,1]
                             nml.z = sqrt(1 - dot(nml.xy, nml.xy)); // Compute Z
                         ETC1S / BasisLZ encoding, RDO is disabled (no selector RDO, no endpoint 
                         RDO) to provide better quality.
      --threads <count>  Sets the number of threads to use during encoding. By default, encoding 
                         will use the number of threads reported by thread::hardware_concurrency or 
                         1 if value returned is 0.
      --no-sse           Forbid use of the SSE instruction set. Ignored if CPU does not support 
                         SSE. SSE can only be disabled on the basis-lz and uastc compressors.
